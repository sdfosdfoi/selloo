import express from "express";
import TelegramBot from "node-telegram-bot-api";

const TOKEN = "8356139072:AAFhiu7mSCb431Ewa8-vnwIPVsLW9l46TyA"; // —Ç–≤–æ–π —Ç–æ–∫–µ–Ω
const URL = "https://labubub-4mj5.vercel.app"; // –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π URL –Ω–∞ Vercel
const PORT = process.env.PORT || 3000;

const bot = new TelegramBot(TOKEN, { polling: false });
const app = express();
app.use(express.json());

// /start –∫–æ–º–∞–Ω–¥–∞
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;

  const text = `
<b>–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Labubu!</b>

–¢—ã –ø–æ–ø–∞–ª –≤ –º–∏—Ä –õ–∞–±—É–±—É ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞! üêæ

<b>–ß—Ç–æ –¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –û—Ç–∫—Ä—ã–≤–∞–π —Å—É–Ω–¥—É–∫–∏ üß∞
‚Ä¢ –ö–æ—Ä–º–∏ –∏ –∏–≥—Ä–∞–π —Å –ø–∏—Ç–æ–º—Ü–µ–º üéÆ
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π ü§ù
‚Ä¢ –ü–æ–ª—É—á–∞–π –Ω–∞–≥—Ä–∞–¥—ã üèÜ
‚Ä¢ –ë—É–¥—å —Å–∞–º—ã–º –∫—Ä—É—Ç—ã–º –≤ —à–∫–æ–ª–µ üòé
`;

  const options = {
    parse_mode: "HTML",
    reply_markup: {
      inline_keyboard: [
        [{ text: "–ò–≥—Ä–∞—Ç—å ‚ñ∂Ô∏è", callback_data: "play" }],
        [{ text: "–°—É–Ω–¥—É–∫–∏ üß∞", callback_data: "chests" }],
        [{ text: "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π ü§ù", callback_data: "invite" }]
      ]
    }
  };

  bot.sendMessage(chatId, text, options);
});

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
bot.on("callback_query", (query) => {
  const chatId = query.message.chat.id;

  if (query.data === "play") {
    bot.sendMessage(chatId, "üéÆ –í—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä–∞—Ç—å —Å –õ–∞–±—É–±—É!");
  } else if (query.data === "chests") {
    bot.sendMessage(chatId, "üß∞ –í—ã –æ—Ç–∫—Ä—ã–ª–∏ —Å—É–Ω–¥—É–∫! –ß—Ç–æ —Ç–∞–º?");
  } else if (query.data === "invite") {
    bot.sendMessage(chatId, "ü§ù –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –ø–æ —Å—Å—ã–ª–∫–µ: https://labubub-4mj5.vercel.app");
  }

  bot.answerCallbackQuery(query.id);
});

// endpoint –¥–ª—è Telegram (webhook)
app.post(`/webhook/${TOKEN}`, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

app.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
  await bot.setWebHook(`${URL}/webhook/${TOKEN}`);
});
